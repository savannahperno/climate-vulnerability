
import pandas as pd
import geopandas as gpd
from shapely.geometry import Point
import matplotlib.pyplot as plt
from matplotlib.colors import TwoSlopeNorm
import matplotlib.gridspec as gridspec
import cartopy.crs as ccrs
import cartopy.feature as cfeature
import numpy as np


#### Climate data handling

# Path to the local file
climate_file_path = 'NASA_temp_data.txt'
#Temperature data is from 2024 anomalies compared to the 1951-1980 baseline
#The temperature is a land-ocean temperature index

# Read the data into DataFrame
climate_data = pd.read_csv(climate_file_path, sep=r'\s+', header=None)

climate_data.columns = ['Arrayi', 'Arrayj', 'Longitude', 'Latitude', 'Anomaly']
climate_data = climate_data[pd.to_numeric(climate_data['Anomaly'], errors='coerce').notnull()]
climate_data['Anomaly'] = pd.to_numeric(climate_data['Anomaly'])
climate_data['Anomaly'] = climate_data['Anomaly'].replace(9999.0, np.nan)
climate_data.dropna(subset=['Anomaly'], inplace=True)

climate_data['Latitude'] = pd.to_numeric(climate_data['Latitude'])
climate_data['Longitude'] = pd.to_numeric(climate_data['Longitude'])






##### Economic data handling
economic_data = pd.read_csv('World_Bank_Econ_data.csv')

economic_data.columns = ['Economy', 'Code', 'Region', 'Income group', 'Lending category']

# Load country shapes
world = gpd.read_file('world-administrative-boundaries.shp')

# merge 2023 economic data to the map (map file has econ data, but from 2019)
world = world.merge(economic_data, how="left", left_on="iso3", right_on="Code")

income_label_mapping = {
        '1_High income': 'High income',
        '2_Upper middle income': 'Upper middle income',
        '3_Lower middle income': 'Lower middle income',
        '4_Low income' : 'Low income'
    }



########### Combining both datasets

# Determine the bounding of world
minx, miny, maxx, maxy = world.total_bounds

# Create grid same size of lat/long
latitudes = np.arange(np.floor(miny), np.ceil(maxy) + 1, 1)
longitudes = np.arange(np.floor(minx), np.ceil(maxx) + 1, 1)

points = []
for lat in latitudes:
    for lon in longitudes:
        points.append(Point(lon, lat))

# covert points to gdf
points_gdf = gpd.GeoDataFrame(geometry=points, crs=world.crs)

# join points to econ and shape data for countries. Remove any NaN
points_in_countries = gpd.sjoin(points_gdf, world, how="inner", predicate="within")
points_in_countries.dropna(subset=['Income group'], inplace=True)

if 'index_right' in points_in_countries.columns:
    points_in_countries = points_in_countries.drop(columns='index_right')

#add points column to climate data
climate_data['geo'] = climate_data.apply(
    lambda row: Point(row['Longitude'], row['Latitude']), axis=1
)

if 'index_right' in climate_data.columns:
    climate_data = climate_data.drop(columns='index_right')

climate_gdf = gpd.GeoDataFrame(climate_data, geometry= climate_data['geo'], crs=world.crs)

# combine econ data and climate data into one dataset
combined_gdf = gpd.sjoin(climate_gdf, points_in_countries, how="inner", predicate="within")

# normalize the climate anomaly to a range of 0 - 1
combined_gdf['Scaled_Anomaly'] = (combined_gdf['Anomaly'] / combined_gdf['Anomaly'].abs().max()).abs()

# assign risk factors to income groups. These are arbitrary and can be adjusted
income_group_risk = {
    '4_Low income': 6,
    '3_Lower middle income': 4,
    '2_Upper middle income': 2,
    '1_High income': 1
}
combined_gdf['Income_Risk_Value'] = combined_gdf['Income group'].map(income_group_risk)

# combine scaled values using a weighted sum (arbitrary)
combined_gdf['Combined_Metric'] = (0.7 * combined_gdf['Scaled_Anomaly']) + (0.3 * combined_gdf['Income_Risk_Value'])




### Plot all figures

fig = plt.figure(figsize=(12, 6))
gs = gridspec.GridSpec(2, 2, width_ratios=[1, 2], height_ratios=[1, 1])

ax0 = plt.subplot(gs[0, 0], projection=ccrs.PlateCarree())
ax1 = plt.subplot(gs[1, 0], projection=ccrs.PlateCarree())
ax2 = plt.subplot(gs[:, 1], projection=ccrs.PlateCarree()) 

for ax in [ax0, ax1, ax2]:
    ax.set_global()
    # Add features such as coastlines, borders, etc.
    ax.add_feature(cfeature.COASTLINE)
    ax.add_feature(cfeature.BORDERS)
    ax.set_xlabel('Longitude') 
    ax.set_ylabel('Latitude')


# set the key bar so zero is white for climate data
norm = TwoSlopeNorm(vmin=-6.5, vcenter=0, vmax=6.5)

### plot climate data
scatter1 = ax0.scatter(
    climate_data['Longitude'], climate_data['Latitude'], 
    c=climate_data['Anomaly'], cmap='bwr', s=10, 
     norm = norm, transform=ccrs.PlateCarree()
)

# Add colorbar for the anomaly values and title
cbar1 = plt.colorbar(scatter1, ax=ax0, label='Temperature Anomaly (°C)',  pad=0.04)
ax0.set_title('Temperature Anomalies (°C) - July 2024')

###plot econ data

world.plot(column='Income group', 
        ax=ax1, 
        legend=True, 
        legend_kwds={'loc':'lower center', 'bbox_to_anchor':(0.5, -0.15), 'ncol': 2, 'title': 'Income Group', 'fontsize' : 7}, 
        cmap='OrRd',  
        edgecolor='black')

# Add a title and show the plot
ax1.set_title('Income Groups, Globally')


#custom_labels = [income_label_mapping.get(label, label) for label in labels]





###plot combined data


scatter2 = ax2.scatter(
    combined_gdf['Longitude'], combined_gdf['Latitude'], 
    c=combined_gdf['Combined_Metric'], cmap='RdPu', s=5, 
     transform=ccrs.PlateCarree()
)

# Add colorbar for the combined metric
cbar2 = plt.colorbar(scatter2, ax=ax2, orientation='vertical', label='Weighted + Combined Metric (Scaled Climate Anomaly + Income Group)', pad=0.04)

# Set titles and labels
ax2.set_title('Combined Climate and Economic Vulnerability')




plt.tight_layout()
plt.show()




######################################################################################
####SOURCES####
# Temperature data taken from https://data.giss.nasa.gov/gistemp on 08/22/24 with the following recent publications:
#GISTEMP Team, 2024: GISS Surface Temperature Analysis (GISTEMP), version 4. NASA Goddard Institute for Space Studies. Dataset accessed 20YY-MM-DD at data.giss.nasa.gov/gistemp/.
#Lenssen, N., G. Schmidt, J. Hansen, M. Menne, A. Persin, R. Ruedy, and D. Zyss, 2019: Improvements in the GISTEMP uncertainty model. J. Geophys. Res. Atmos., 124, no. 12, 6307-6326, doi:10.1029/2018JD029522.

# Economic data for 2023 taken from https://datatopics.worldbank.org/world-development-indicators/the-world-by-income-and-region.html

# Map used https://public.opendatasoft.com/explore/dataset/world-administrative-boundaries/table/?flg=en-us&dataChart=eyJxdWVyaWVzIjpbeyJjb25maWciOnsiZGF0YXNldCI6IndvcmxkLWFkbWluaXN0cmF0aXZlLWJvdW5kYXJpZXMiLCJvcHRpb25zIjp7ImZsZyI6ImVuLXVzIn19LCJjaGFydHMiOlt7ImFsaWduTW9udGgiOnRydWUsInR5cGUiOiJjb2x1bW4iLCJmdW5jIjoiQ09VTlQiLCJzY2llbnRpZmljRGlzcGxheSI6dHJ1ZSwiY29sb3IiOiIjRkY1MTVBIn1dLCJ4QXhpcyI6InN0YXR1cyIsIm1heHBvaW50cyI6NTAsInNvcnQiOiIifV0sInRpbWVzY2FsZSI6IiIsImRpc3BsYXlMZWdlbmQiOnRydWUsImFsaWduTW9udGgiOnRydWV9&location=3,68.59249,-12.83203&basemap=jawg.light
